{"version":3,"sources":["components/Board/Board.module.css","components/Records/Records.module.css","components/Functions/Functions.module.css","App.module.css","utils/Puzzle.ts","utils/Generator.ts","utils/Solver.ts","components/Board/Board.tsx","components/Records/Records.tsx","components/Functions/Functions.tsx","App.tsx","index.tsx"],"names":["module","exports","Puzzle","size","puzzle","pzSolved","findTile","tile","pz","y","x","generateChildNodes","prevMoves","tb","8","15","childNodes","newNode","JSON","parse","stringify","push","manhattan","score","val","c_pos","f_pos","y_d","Math","abs","this","Generator","shuffle","arr","j","i","length","floor","random","make","potentialPz","sum","temp","Solver","AStar","queue","closeSet","shift","currentPz","gScore","step","nextChilds","sort","a","b","timeOut","ms","Promise","resolve","setTimeout","Board","board","swap","isPlaying","showPanel","finishedSolving","toggleInitialState","solvedByPlayer","useState","isClickable","setIsClickable","inSolvingProcess","setInSolvingProcess","tileStyle","setTileStyle","commandsLoader","useCallback","sequence","handleTileClick","useEffect","getStyle","n","styles","left","right","top","bottom","transition","col","row","player","isSwappable","tempTileStyle","col2","row2","swapTiles","className","styled","rows","tiles","style","onClick","Records","timeList","DisplayRecords","sortedTimeList","map","key","record","seconds","slice","formatTime","container","display","title","Functions","isSolving","restart","appendTime","timerInterval","setTimerInterval","timerTime","setTimerTime","btnVisibility","setBtnVisibility","menuWidth","setMenuWidth","clickable","setClickable","toggleVisibility","startTimer","clearInterval","toggleMenuWidth","interval","setInterval","width","timer","visibility","btn","App","state","isInitial","bodyColor","togglePanel","appendToTimeList","time","setState","bool","new_pz","toggleSolvedByPlayer","toggleBodyColor","document","body","background","handleSwapTiles","tempBoard","handleSolve","handleFinishedSolving","start","id","name","type","onChange","htmlFor","React","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9f51996b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__25Olb\",\"rows\":\"Board_rows__17S8z\",\"tiles\":\"Board_tiles__1Oc-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Records_container__19mKB\",\"display\":\"Records_display__1nE_V\",\"title\":\"Records_title__jvqWA\",\"record\":\"Records_record__1VMuS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Functions_container__3hbwH\",\"btn\":\"Functions_btn__12RTR\",\"timer\":\"Functions_timer__2ULnS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"start\":\"App_start__Cd0ym\"};","class Puzzle {\r\n  size: 8 | 15;\r\n  puzzle: number[][];\r\n  pzSolved: number[][];\r\n\r\n  constructor(size: 8 | 15, puzzle: number[][]) {\r\n    this.size = size;\r\n    this.puzzle = puzzle;\r\n    if (size === 8)\r\n      this.pzSolved = [\r\n        [1, 2, 3],\r\n        [4, 5, 6],\r\n        [7, 8, 0],\r\n      ];\r\n    else\r\n      this.pzSolved = [\r\n        [1, 2, 3, 4],\r\n        [5, 6, 7, 8],\r\n        [9, 10, 11, 12],\r\n        [13, 14, 15, 0],\r\n      ];\r\n  }\r\n\r\n  findTile = (tile: number, pz: number[][]) => {\r\n    for (let y = 0; y < this.size; y++) {\r\n      for (let x = 0; x < this.size; x++) {\r\n        if (pz[y][x] === tile) return [y, x];\r\n      }\r\n    }\r\n    return [-1, -1];\r\n  };\r\n\r\n  generateChildNodes = (puzzle: number[][], prevMoves: string) => {\r\n    let tb = {\r\n      8: 2,\r\n      15: 3,\r\n    };\r\n    let childNodes = [];\r\n    let [y, x] = this.findTile(0, puzzle);\r\n    if (x > 0) {\r\n      // left\r\n      let newNode = JSON.parse(JSON.stringify(puzzle));\r\n      [newNode[y][x - 1], newNode[y][x]] = [newNode[y][x], newNode[y][x - 1]];\r\n      childNodes.push([newNode, prevMoves + \"l\"]);\r\n    }\r\n    if (x < tb[this.size]) {\r\n      let newNode = JSON.parse(JSON.stringify(puzzle));\r\n      [newNode[y][x + 1], newNode[y][x]] = [newNode[y][x], newNode[y][x + 1]];\r\n      childNodes.push([newNode, prevMoves + \"r\"]);\r\n    }\r\n    if (y > 0) {\r\n      let newNode = JSON.parse(JSON.stringify(puzzle));\r\n      [newNode[y - 1][x], newNode[y][x]] = [newNode[y][x], newNode[y - 1][x]];\r\n      childNodes.push([newNode, prevMoves + \"u\"]);\r\n    }\r\n    if (y < tb[this.size]) {\r\n      let newNode = JSON.parse(JSON.stringify(puzzle));\r\n      [newNode[y + 1][x], newNode[y][x]] = [newNode[y][x], newNode[y + 1][x]];\r\n      childNodes.push([newNode, prevMoves + \"d\"]);\r\n    }\r\n    return childNodes;\r\n  };\r\n\r\n  manhattan = (puzzle: number[][]) => {\r\n    let score = 0;\r\n    for (let val = 0; val <= this.size; val++) {\r\n      let c_pos = this.findTile(val, puzzle);\r\n      let f_pos = this.findTile(val, this.pzSolved);\r\n      let y_d = Math.abs(c_pos[0] - f_pos[0]);\r\n      let x_d = Math.abs(c_pos[1] - f_pos[1]);\r\n      score += x_d + y_d;\r\n    }\r\n    return score;\r\n  };\r\n}\r\n\r\nexport default Puzzle;\r\n","import Puzzle from \"./Puzzle\";\r\n\r\nclass Generator extends Puzzle {\r\n\r\n  constructor(size: 8 | 15) {\r\n    super(size, [[]]);\r\n  }\r\n\r\n  shuffle = (arr: number[]) => {\r\n    var j, x, i;\r\n    for (i = arr.length - 1; i > 0; i--) {\r\n      j = Math.floor(Math.random() * (i + 1));\r\n      x = arr[i];\r\n      arr[i] = arr[j];\r\n      arr[j] = x;\r\n  }\r\n  return arr;\r\n  }\r\n\r\n  make = () => {\r\n    while (true) {\r\n      let potentialPz = this.shuffle([1, 2, 3, 4, 5, 6, 7, 8, 0]);\r\n\r\n      // checks solvability\r\n      let sum = 0;\r\n      for (let i = 0; i < 8; i++) {\r\n        if (potentialPz[i] === 0) continue;\r\n        for (let j = i+1; j < 9; j++) {\r\n          if (potentialPz[j] === 0) continue;\r\n          if (potentialPz[i] > potentialPz[j]) {\r\n            sum++;\r\n          }\r\n        }\r\n      }\r\n      if (sum % 2 === 0) {\r\n        let pz: number[][] = [];\r\n        for (let i = 0; i < 9; i+=3) {\r\n          let temp = []\r\n          for (let j = i; j < i + 3; j++) {\r\n            temp.push(potentialPz[j]);\r\n          }\r\n          pz.push(temp);\r\n        }\r\n        return pz;\r\n      }\r\n      continue;\r\n    }\r\n  };\r\n}\r\n\r\nexport default Generator;\r\n","import Puzzle from \"./Puzzle\";\r\n\r\nclass Solver extends Puzzle {\r\n  AStar = () => {\r\n    let gScore: number = 0;\r\n    let queue: any = [[this.puzzle, gScore, this.manhattan(this.puzzle), \"\"]];\r\n    interface Dict {\r\n      [key: string]: boolean;\r\n    }\r\n    let closeSet: Dict = {};\r\n    while (queue.length !== 0) {\r\n      // eslint-disable-next-line\r\n      let [currentPz, gScore, hScore, step] = queue.shift();\r\n      closeSet[JSON.stringify(currentPz)] = true;\r\n      let nextChilds = this.generateChildNodes(currentPz, step);\r\n      for (let i = 0; i < nextChilds.length; i++) {\r\n        if (\r\n          JSON.stringify(nextChilds[i][0]) === JSON.stringify(this.pzSolved)\r\n        ) {\r\n          return nextChilds[i][1];\r\n        } else if (closeSet[JSON.stringify(nextChilds[i][0])] !== true) {\r\n          queue.push([\r\n            nextChilds[i][0],\r\n            gScore + 1,\r\n            this.manhattan(nextChilds[i][0]),\r\n            nextChilds[i][1],\r\n          ]);\r\n        }\r\n      }\r\n      queue.sort((a: number[], b: number[]) => a[2] - b[2]);\r\n    }\r\n  };\r\n}\r\n\r\nexport default Solver;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport CSS from \"csstype\";\r\n\r\nimport Solver from \"../../utils/Solver\";\r\nimport Generator from \"../../utils/Generator\";\r\nimport Puzzle from \"../../utils/Puzzle\";\r\n\r\nimport styled from \"./Board.module.css\";\r\n\r\ntype BoardProps = {\r\n  board: number[][];\r\n  swap: (col: number, row: number, col2: number, row2: number) => void;\r\n  isPlaying: boolean;\r\n  showPanel: (bool: boolean) => void;\r\n  finishedSolving: () => void;\r\n  toggleInitialState: (bool: boolean) => void;\r\n  solvedByPlayer: (bool: boolean) => void;\r\n};\r\n\r\nconst timeOut = (ms: number) => {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n};\r\n\r\nconst Board: React.FC<BoardProps> = ({\r\n  board,\r\n  swap,\r\n  isPlaying,\r\n  showPanel,\r\n  finishedSolving,\r\n  toggleInitialState,\r\n  solvedByPlayer,\r\n}) => {\r\n  const [isClickable, setIsClickable] = useState(true);\r\n  const [inSolvingProcess, setInSolvingProcess] = useState(false);\r\n\r\n  const [tileStyle, setTileStyle] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0]);\r\n\r\n  const commandsLoader = useCallback(\r\n    async (sequence: string) => {\r\n      for (let i = 0; i < sequence.length; i++) {\r\n        let [y, x] = findTile(0);\r\n        if (sequence[i] === \"u\") y--;\r\n        if (sequence[i] === \"d\") y++;\r\n        if (sequence[i] === \"r\") x++;\r\n        if (sequence[i] === \"l\") x--;\r\n        handleTileClick(y, x, false);\r\n        await timeOut(500);\r\n      }\r\n      finishedSolving();\r\n      setInSolvingProcess(false);\r\n    },\r\n    [board]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isPlaying && !inSolvingProcess) {\r\n      let pz = new Solver(8, board);\r\n      commandsLoader(pz.AStar());\r\n      setInSolvingProcess(true);\r\n      showPanel(false);\r\n    }\r\n  }, [isPlaying, inSolvingProcess, showPanel, commandsLoader, board]);\r\n\r\n  const swapTiles = (col: number, row: number, col2: number, row2: number) => {\r\n    swap(col, row, col2, row2);\r\n  };\r\n\r\n  const findTile = (tile: number) => {\r\n    let tempBoard = new Puzzle(8, board);\r\n    return tempBoard.findTile(tile, board);\r\n  };\r\n\r\n  const isSwappable = (col: number, row: number) => {\r\n    let [y, x] = findTile(0);\r\n    if (y === col && Math.abs(x - row) === 1) return true;\r\n    if (x === row && Math.abs(y - col) === 1) return true;\r\n    return false;\r\n  };\r\n\r\n  const getStyle = (n: number) => {\r\n    interface Dict {\r\n      [key: string]: string;\r\n    }\r\n    let styles: Dict = {};\r\n    if (tileStyle[n] === 0) {\r\n      styles = { left: \"0vw\", right: \"0vw\", top: \"0vw\", bottom: \"0vw\" };\r\n    }\r\n    if (tileStyle[n] === 3) {\r\n      styles = { bottom: \"9.3vw\", transition: \"bottom 0.5s\" };\r\n    }\r\n    if (tileStyle[n] === 4) {\r\n      styles = { top: \"9.3vw\", transition: \"top 0.5s\" };\r\n    }\r\n    if (tileStyle[n] === 2) {\r\n      styles = { right: \"9.3vw\", transition: \"right 0.5s\" };\r\n    }\r\n    if (tileStyle[n] === 1) {\r\n      styles = { left: \"9.3vw\", transition: \"left 0.5s\" };\r\n    }\r\n    if (n === 0) {\r\n      styles[\"background\"] = \"transparent\";\r\n    }\r\n    return styles;\r\n  };\r\n\r\n  const handleTileClick = (col: number, row: number, player: boolean) => {\r\n    if (!isClickable) return;\r\n    if (isSwappable(col, row)) {\r\n      let [y, x] = findTile(0);\r\n      let tempTileStyle = [...tileStyle];\r\n\r\n      if (y === col && x > row) {\r\n        tempTileStyle[0] = 2;\r\n        tempTileStyle[board[col][row]] = 1;\r\n      }\r\n      if (y === col && x < row) {\r\n        tempTileStyle[0] = 1;\r\n        tempTileStyle[board[col][row]] = 2;\r\n      }\r\n      if (x === row && y > col) {\r\n        tempTileStyle[0] = 3;\r\n        tempTileStyle[board[col][row]] = 4;\r\n      }\r\n      if (x === row && y < col) {\r\n        tempTileStyle[0] = 4;\r\n        tempTileStyle[board[col][row]] = 3;\r\n      }\r\n\r\n      setTileStyle([...tempTileStyle]);\r\n      setIsClickable(false);\r\n      setTimeout(() => {\r\n        setTileStyle([0, 0, 0, 0, 0, 0, 0, 0, 0]);\r\n        swapTiles(col, row, y, x);\r\n        if (\r\n          JSON.stringify(board) ===\r\n          JSON.stringify([\r\n            [1, 2, 3],\r\n            [4, 5, 6],\r\n            [7, 8, 0],\r\n          ])\r\n        ) {\r\n          if (player) solvedByPlayer(true);\r\n          toggleInitialState(false);\r\n        }\r\n        setIsClickable(true);\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styled.board}>\r\n      <ul className={styled.rows}>\r\n        <li className={styled.tiles} style={getStyle(board[0][0])} onClick={() => handleTileClick(0, 0, true)}>\r\n          {board[0][0] === 0 ? \"\" : board[0][0]}\r\n        </li>\r\n        <li className={styled.tiles} style={getStyle(board[0][1])} onClick={() => handleTileClick(0, 1, true)}>\r\n          {board[0][1] === 0 ? \"\" : board[0][1]}\r\n        </li>\r\n        <li className={styled.tiles} style={getStyle(board[0][2])} onClick={() => handleTileClick(0, 2, true)}>\r\n          {board[0][2] === 0 ? \"\" : board[0][2]}\r\n        </li>\r\n        <li className={styled.tiles} style={getStyle(board[1][0])} onClick={() => handleTileClick(1, 0, true)}>\r\n          {board[1][0] === 0 ? \"\" : board[1][0]}\r\n        </li>\r\n        <li className={styled.tiles} style={getStyle(board[1][1])} onClick={() => handleTileClick(1, 1, true)}>\r\n          {board[1][1] === 0 ? \"\" : board[1][1]}\r\n        </li>\r\n        <li className={styled.tiles} style={getStyle(board[1][2])} onClick={() => handleTileClick(1, 2, true)}>\r\n          {board[1][2] === 0 ? \"\" : board[1][2]}\r\n        </li>\r\n        <li className={styled.tiles} style={getStyle(board[2][0])} onClick={() => handleTileClick(2, 0, true)}>\r\n          {board[2][0] === 0 ? \"\" : board[2][0]}\r\n        </li>\r\n        <li className={styled.tiles} style={getStyle(board[2][1])} onClick={() => handleTileClick(2, 1, true)}>\r\n          {board[2][1] === 0 ? \"\" : board[2][1]}\r\n        </li>\r\n        <li className={styled.tiles} style={getStyle(board[2][2])} onClick={() => handleTileClick(2, 2, true)}>\r\n          {board[2][2] === 0 ? \"\" : board[2][2]}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import { time } from \"console\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport styled from \"./Records.module.css\";\r\n\r\ninterface RecordsProps {\r\n  timeList: number[];\r\n}\r\n\r\nconst formatTime = (ms: number) => {\r\n  let seconds = (\"0\" + (Math.floor(ms / 1000) % 60)).slice(-2);\r\n  let minutes = (\"0\" + (Math.floor(ms / 60000) % 60)).slice(-2);\r\n  return minutes + \":\" + seconds;\r\n};\r\n\r\nconst Records: React.FC<RecordsProps> = ({ timeList }) => {\r\n  const DisplayRecords = () => {\r\n    timeList.sort();\r\n    const sortedTimeList = timeList.map((val, i) => (\r\n      <div key={i} className={styled.record}>\r\n        {formatTime(val)}\r\n      </div>\r\n    ));\r\n    return <div>{sortedTimeList}</div>;\r\n  };\r\n\r\n  return (\r\n    <div className={styled.container}>\r\n      <div className={styled.display}>\r\n        <div className={styled.title}>Records</div>\r\n        <DisplayRecords />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Records;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport styled from \"./Functions.module.css\";\r\n\r\ninterface FunctionsProps {\r\n  showPanel: boolean;\r\n  isSolving: () => void;\r\n  restart: () => void;\r\n  appendTime: (time: number) => void;\r\n}\r\n\r\nconst timeOut = (ms: number) => {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n};\r\n\r\nconst Functions: React.FC<FunctionsProps> = ({\r\n  showPanel,\r\n  isSolving,\r\n  restart,\r\n  appendTime,\r\n}) => {\r\n  const [timerInterval, setTimerInterval] = useState<any>();\r\n  const [timerTime, setTimerTime] = useState(0);\r\n  const [btnVisibility, setBtnVisibility] = useState(false);\r\n  const [menuWidth, setMenuWidth] = useState(false);\r\n  const [clickable, setClickable] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const toggleVisibility = async () => {\r\n      setClickable(false);\r\n      if (showPanel === true) {\r\n        startTimer();\r\n        await timeOut(300);\r\n      } else {\r\n        appendTime(timerTime);\r\n        setTimerTime(0);\r\n        clearInterval(timerInterval);\r\n      }\r\n      setBtnVisibility(showPanel ? true : false);\r\n      setClickable(true);\r\n    };\r\n    const toggleMenuWidth = async () => {\r\n      setClickable(false);\r\n      setMenuWidth(showPanel ? true : false);\r\n      setClickable(true);\r\n    };\r\n    if (clickable) {\r\n      toggleVisibility();\r\n      toggleMenuWidth();\r\n    }\r\n  }, [showPanel]);\r\n\r\n  const startTimer = () => {\r\n    const interval = setInterval(() => {\r\n      setTimerTime((timerTime) => timerTime + 1000);\r\n    }, 1000);\r\n    setTimerInterval(interval);\r\n  };\r\n\r\n  const timer = () => {\r\n    if (timerTime === 3599000) {\r\n      clearInterval(timerInterval);\r\n    }\r\n    let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\r\n    let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\r\n    return minutes + \":\" + seconds;\r\n  };\r\n\r\n  const handleSolve = () => {\r\n    isSolving();\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    restart();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={styled.container}\r\n      style={{ width: menuWidth ? \"12vw\" : \"0\" }}\r\n    >\r\n      <div\r\n        className={styled.timer}\r\n        style={{ visibility: btnVisibility ? \"visible\" : \"hidden\" }}\r\n      >\r\n        {timer()}\r\n      </div>\r\n      <button\r\n        className={styled.btn}\r\n        onClick={handleSolve}\r\n        style={{ visibility: btnVisibility ? \"visible\" : \"hidden\" }}\r\n      >\r\n        Solve\r\n      </button>\r\n      <button\r\n        className={styled.btn}\r\n        onClick={handleRestart}\r\n        style={{ visibility: btnVisibility ? \"visible\" : \"hidden\" }}\r\n      >\r\n        Restart\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Functions;\r\n","import React from \"react\";\n\nimport Solver from \"./utils/Solver\";\nimport Generator from \"./utils/Generator\";\n\nimport Board from \"./components/Board/Board\";\nimport Records from \"./components/Records/Records\";\nimport Functions from \"./components/Functions/Functions\";\n\nimport \"./body.css\";\nimport \"./toggle.css\";\nimport styled from \"./App.module.css\";\n\ninterface AppState {\n  board: number[][];\n  isPlaying: boolean;\n  isInitial: boolean;\n  showPanel: boolean;\n  bodyColor: boolean;\n  solvedByPlayer: boolean;\n  timeList: number[];\n}\nconst timeOut = (ms: number) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\nclass App extends React.Component<{}, AppState> {\n  state = {\n    board: [\n      [1, 2, 3],\n      [4, 5, 6],\n      [7, 8, 0],\n    ],\n    isPlaying: false,\n    isInitial: true,\n    showPanel: false,\n    bodyColor: false,\n    timeList: [],\n    solvedByPlayer: false,\n  };\n\n  restart = async () => {\n    this.togglePanel(false);\n    await timeOut(500);\n    this.toggleInitialState(false);\n  };\n\n  appendToTimeList = (time: number) => {\n    if (this.state.solvedByPlayer) {\n      let temp: number[] = [...this.state.timeList];\n      temp.push(time);\n      this.setState({ timeList: temp });\n      this.setState({ solvedByPlayer: false });\n    }\n  };\n\n  toggleInitialState = (bool: boolean) => {\n    if (bool) {\n      let new_pz = new Generator(8).make();\n      this.setState({ board: new_pz });\n    }\n    this.setState({ isInitial: !this.state.isInitial });\n    this.togglePanel(bool);\n  };\n\n  togglePanel = (bool: boolean) => {\n    this.setState({ showPanel: bool });\n  };\n\n  toggleSolvedByPlayer = (bool: boolean) => {\n    this.setState({ solvedByPlayer: bool });\n  };\n\n  toggleBodyColor = () => {\n    this.setState({ bodyColor: !this.state.bodyColor });\n    document.body.style.background = this.state.bodyColor\n      ? \"#cacdd4\"\n      : \"#27282a\";\n  };\n\n  handleSwapTiles = (col: number, row: number, col2: number, row2: number) => {\n    let tempBoard = this.state.board;\n    [tempBoard[col][row], tempBoard[col2][row2]] = [\n      tempBoard[col2][row2],\n      tempBoard[col][row],\n    ];\n    this.setState({ board: tempBoard });\n  };\n\n  handleSolve = () => {\n    this.setState({ isPlaying: true });\n  };\n\n  handleFinishedSolving = () => {\n    this.setState({ isPlaying: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          {this.state.isInitial ? (\n            <button\n              className={styled.start}\n              onClick={() => this.toggleInitialState(true)}\n            >\n              START\n            </button>\n          ) : (\n            \"\"\n          )}\n          <Records timeList={this.state.timeList} />\n          <Functions\n            showPanel={this.state.showPanel}\n            isSolving={this.handleSolve}\n            restart={this.restart}\n            appendTime={(time) => this.appendToTimeList(time)}\n          />\n          <Board\n            board={this.state.board}\n            swap={(col, row, col2, row2) =>\n              this.handleSwapTiles(col, row, col2, row2)\n            }\n            isPlaying={this.state.isPlaying}\n            showPanel={(bool) => this.togglePanel(bool)}\n            toggleInitialState={(bool) => this.toggleInitialState(bool)}\n            finishedSolving={this.handleFinishedSolving}\n            solvedByPlayer={(bool) => this.toggleSolvedByPlayer(bool)}\n          />\n        </div>\n        <div className=\"toggle-wrapper\">\n          <input\n            id=\"provideMuffins\"\n            name=\"provideMuffins\"\n            className=\"toggle\"\n            type=\"checkbox\"\n            onChange={this.toggleBodyColor}\n          />\n          <label htmlFor=\"provideMuffins\" className=\"toggle--label\"></label>\n          <div className=\"foux-toggle\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}