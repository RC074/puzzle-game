{"version":3,"sources":["components/Board/Board.module.css","utils/Puzzle.ts","utils/Solver.ts","components/Board/Board.tsx","App.tsx","index.tsx"],"names":["module","exports","Puzzle","size","puzzle","pzSolved","findTile","tile","pz","y","x","generateChildNodes","prevMoves","tb","8","15","childNodes","newNode","JSON","parse","stringify","push","manhattan","score","val","c_pos","f_pos","y_d","Math","abs","this","Solver","AStar","queue","closeSet","length","shift","currentPz","gScore","step","nextChilds","i","sort","a","b","Board","useState","board","setBoard","isClickable","setIsClickable","tileStyle","setTileStyle","getStyle","n","styles","left","right","top","bottom","transition","handleTileClick","col","row","isSwappable","tempTileStyle","setTimeout","col2","row2","tempBoard","swapTiles","className","styled","rows","tiles","style","onClick","App","console","log","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.383f7026.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__pDV63\",\"rows\":\"Board_rows__1Unu7\",\"tiles\":\"Board_tiles__2sfzy\"};","class Puzzle {\r\n  size: 8 | 15;\r\n  puzzle: number[][];\r\n  pzSolved: number[][];\r\n\r\n  constructor(size: 8 | 15, puzzle: number[][]) {\r\n    this.size = size;\r\n    this.puzzle = puzzle;\r\n    if (size === 8)\r\n      this.pzSolved = [\r\n        [1, 2, 3],\r\n        [4, 5, 6],\r\n        [7, 8, 0],\r\n      ];\r\n    else\r\n      this.pzSolved = [\r\n        [1, 2, 3, 4],\r\n        [5, 6, 7, 8],\r\n        [9, 10, 11, 12],\r\n        [13, 14, 15, 0],\r\n      ];\r\n  }\r\n\r\n  findTile = (tile: number, pz: number[][]) => {\r\n    for (let y = 0; y < this.size; y++) {\r\n      for (let x = 0; x < this.size; x++) {\r\n        if (pz[y][x] === tile) return [y, x];\r\n      }\r\n    }\r\n    return [-1, -1];\r\n  };\r\n\r\n  generateChildNodes = (puzzle: number[][], prevMoves: string) => {\r\n    let tb = {\r\n      8: 2,\r\n      15: 3,\r\n    };\r\n    let childNodes = [];\r\n    let [y, x] = this.findTile(0, puzzle);\r\n    if (x > 0) {\r\n      // left\r\n      let newNode = JSON.parse(JSON.stringify(puzzle));\r\n      [newNode[y][x - 1], newNode[y][x]] = [newNode[y][x], newNode[y][x - 1]];\r\n      childNodes.push([newNode, prevMoves + \"l\"]);\r\n    }\r\n    if (x < tb[this.size]) {\r\n      let newNode = JSON.parse(JSON.stringify(puzzle));\r\n      [newNode[y][x + 1], newNode[y][x]] = [newNode[y][x], newNode[y][x + 1]];\r\n      childNodes.push([newNode, prevMoves + \"r\"]);\r\n    }\r\n    if (y > 0) {\r\n      let newNode = JSON.parse(JSON.stringify(puzzle));\r\n      [newNode[y - 1][x], newNode[y][x]] = [newNode[y][x], newNode[y - 1][x]];\r\n      childNodes.push([newNode, prevMoves + \"u\"]);\r\n    }\r\n    if (y < tb[this.size]) {\r\n      let newNode = JSON.parse(JSON.stringify(puzzle));\r\n      [newNode[y + 1][x], newNode[y][x]] = [newNode[y][x], newNode[y + 1][x]];\r\n      childNodes.push([newNode, prevMoves + \"d\"]);\r\n    }\r\n    return childNodes;\r\n  };\r\n\r\n  manhattan = (puzzle: number[][]) => {\r\n    let score = 0;\r\n    for (let val = 0; val <= this.size; val++) {\r\n      let c_pos = this.findTile(val, puzzle);\r\n      let f_pos = this.findTile(val, this.pzSolved);\r\n      let y_d = Math.abs(c_pos[0] - f_pos[0]);\r\n      let x_d = Math.abs(c_pos[1] - f_pos[1]);\r\n      score += x_d + y_d;\r\n    }\r\n    return score;\r\n  };\r\n}\r\n\r\nexport default Puzzle;\r\n","import Puzzle from \"./Puzzle\";\r\n\r\nclass Solver extends Puzzle {\r\n  AStar = () => {\r\n    let gScore: number = 0;\r\n    let queue: any = [[this.puzzle, gScore, this.manhattan(this.puzzle), \"\"]];\r\n    interface Dict {\r\n      [key: string]: boolean;\r\n    }\r\n    let closeSet: Dict = {};\r\n    while (queue.length !== 0) {\r\n      // eslint-disable-next-line\r\n      let [currentPz, gScore, hScore, step] = queue.shift();\r\n      closeSet[JSON.stringify(currentPz)] = true;\r\n      let nextChilds = this.generateChildNodes(currentPz, step);\r\n      for (let i = 0; i < nextChilds.length; i++) {\r\n        if (\r\n          JSON.stringify(nextChilds[i][0]) === JSON.stringify(this.pzSolved)\r\n        ) {\r\n          return nextChilds[i][1];\r\n        } else if (closeSet[JSON.stringify(nextChilds[i][0])] !== true) {\r\n          queue.push([\r\n            nextChilds[i][0],\r\n            gScore + 1,\r\n            this.manhattan(nextChilds[i][0]),\r\n            nextChilds[i][1],\r\n          ]);\r\n        }\r\n      }\r\n      queue.sort((a: number[], b: number[]) => a[2] - b[2]);\r\n    }\r\n  };\r\n}\r\n\r\nexport default Solver;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CSS from 'csstype';\r\n\r\nimport Solver from \"../../utils/Solver\";\r\nimport Generator from \"../../utils/Generator\";\r\nimport Puzzle from \"../../utils/Puzzle\";\r\n\r\nimport styled from \"./Board.module.css\";\r\n\r\n\r\ntype BoardProps = {};\r\n\r\nconst Board: React.FC<BoardProps> = () => {\r\n\r\n  const [board, setBoard] = useState([\r\n    [1, 2, 3],\r\n    [4, 5, 6],\r\n    [7, 8, 0],\r\n  ]);\r\n\r\n  const [isClickable, setIsClickable] = useState(true);\r\n\r\n  const [tileStyle, setTileStyle] = useState(\r\n    [\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n    ]\r\n  )\r\n\r\n  const swapTiles = (col : number, row : number, col2 : number, row2 : number) => {\r\n    let tempBoard = board;\r\n    [tempBoard[col][row], tempBoard[col2][row2]] = [tempBoard[col2][row2], tempBoard[col][row]]\r\n    setBoard([...tempBoard]);\r\n  }\r\n\r\n  const findTile = (tile : number) => {\r\n    let tempBoard = new Puzzle(8, board);\r\n    return tempBoard.findTile(tile, board)\r\n  }\r\n\r\n  const isSwappable = (col : number, row : number) => {\r\n    let [y, x] = findTile(0);\r\n    if (y === col && Math.abs(x - row) === 1) return true;\r\n    if (x === row && Math.abs(y - col) === 1) return true;\r\n    return false;\r\n  }\r\n\r\n  const getStyle = (n : number) => {\r\n    interface Dict {\r\n      [key: string]: string;\r\n    }\r\n    let styles: Dict = {};\r\n    if (tileStyle[n] === 0) {\r\n      styles = {left: '0', right: '0', top: '0', bottom: '0'};\r\n    }\r\n    if (tileStyle[n] === 3) {\r\n      styles = {bottom: '9.3vw', transition: 'bottom 0.5s'};\r\n    }\r\n    if (tileStyle[n] === 4) {\r\n      styles = {top: '9.3vw', transition: 'top 0.5s'};\r\n    }\r\n    if (tileStyle[n] === 2) {\r\n      styles = {right: '9.3vw', transition: 'right 0.5s'};\r\n    }\r\n    if (tileStyle[n] === 1) {\r\n      styles = {left: '9.3vw',  transition: 'left 0.5s'};\r\n    }\r\n    if (n === 0) {\r\n      styles['background'] = 'transparent';\r\n    }\r\n    return styles;\r\n  }\r\n\r\n  const handleTileClick = (col : number, row : number) => {\r\n    if (!isClickable) return;\r\n    if (isSwappable(col, row)) {\r\n      let [y, x] = findTile(0);\r\n      let tempTileStyle = tileStyle\r\n      \r\n      if (y === col && x > row) {\r\n        tempTileStyle[0] = 2;\r\n        tempTileStyle[board[col][row]] = 1;\r\n      }\r\n      if (y === col && x < row) {\r\n        tempTileStyle[0] = 1;\r\n        tempTileStyle[board[col][row]] = 2;\r\n      }\r\n      if (x === row && y > col) {\r\n        tempTileStyle[0] = 3;\r\n        tempTileStyle[board[col][row]] = 4;\r\n      }\r\n      if (x === row && y < col) {\r\n        tempTileStyle[0] = 4;\r\n        tempTileStyle[board[col][row]] = 3;\r\n      }\r\n\r\n      setTileStyle([...tempTileStyle]);\r\n      setIsClickable(false);\r\n      setTimeout(() => {\r\n        setTileStyle([\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n        ])\r\n        swapTiles(col, row, y, x);\r\n        setIsClickable(true);\r\n      }, 500)\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className={styled.board}>\r\n      <ul className={styled.rows}>\r\n        <li className={styled.tiles} style={getStyle(board[0][0])} onClick={() => handleTileClick(0, 0)}>{board[0][0] === 0 ? '' : board[0][0]}</li>\r\n        <li className={styled.tiles} style={getStyle(board[0][1])} onClick={() => handleTileClick(0, 1)}>{board[0][1] === 0 ? '' : board[0][1]}</li>\r\n        <li className={styled.tiles} style={getStyle(board[0][2])} onClick={() => handleTileClick(0, 2)}>{board[0][2] === 0 ? '' : board[0][2]}</li>\r\n        <li className={styled.tiles} style={getStyle(board[1][0])} onClick={() => handleTileClick(1, 0)}>{board[1][0] === 0 ? '' : board[1][0]}</li>\r\n        <li className={styled.tiles} style={getStyle(board[1][1])} onClick={() => handleTileClick(1, 1)}>{board[1][1] === 0 ? '' : board[1][1]}</li>\r\n        <li className={styled.tiles} style={getStyle(board[1][2])} onClick={() => handleTileClick(1, 2)}>{board[1][2] === 0 ? '' : board[1][2]}</li>\r\n        <li className={styled.tiles} style={getStyle(board[2][0])} onClick={() => handleTileClick(2, 0)}>{board[2][0] === 0 ? '' : board[2][0]}</li>\r\n        <li className={styled.tiles} style={getStyle(board[2][1])} onClick={() => handleTileClick(2, 1)}>{board[2][1] === 0 ? '' : board[2][1]}</li>\r\n        <li className={styled.tiles} style={getStyle(board[2][2])} onClick={() => handleTileClick(2, 2)}>{board[2][2] === 0 ? '' : board[2][2]}</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\n\nimport Solver from \"./utils/Solver\";\nimport Generator from \"./utils/Generator\";\n\nimport Board from \"./components/Board/Board\";\n\nimport \"./body.css\";\nimport styled from \"./App.module.css\";\n\nclass App extends React.Component<{}> {\n  componentDidMount() {\n    let pz = new Solver(15, [\n      [1, 2, 3, 4],\n      [5, 6, 7, 8],\n      [15, 10, 11, 12],\n      [13, 0, 9, 14],\n    ]);\n    console.log(pz.AStar());\n  }\n\n  render() {\n    return (\n      <div>\n        <Board />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}