{"version":3,"sources":["components/Board/Board.module.css","components/Functions/Functions.module.css","components/Records/Records.module.css","App.module.css","utils/Puzzle.ts","utils/Generator.ts","utils/Solver.ts","components/Board/Board.tsx","components/Records/Records.tsx","components/Functions/Functions.tsx","App.tsx","index.tsx"],"names":["module","exports","Puzzle","size","puzzle","pzSolved","findTile","tile","pz","y","x","generateChildNodes","prevMoves","tb","8","15","childNodes","newNode","JSON","parse","stringify","push","manhattan","score","val","c_pos","f_pos","y_d","Math","abs","this","Generator","shuffle","arr","j","i","length","floor","random","make","potentialPz","sum","temp","Solver","AStar","queue","closeSet","shift","currentPz","gScore","step","nextChilds","sort","a","b","timeOut","ms","Promise","resolve","setTimeout","Board","board","swap","isPlaying","showPanel","finishedSolving","toggleInitialState","useState","isClickable","setIsClickable","inSolvingProcess","setInSolvingProcess","tileStyle","setTileStyle","commandsLoader","useCallback","sequence","handleTileClick","useEffect","getStyle","n","styles","left","right","top","bottom","transition","col","row","isSwappable","tempTileStyle","col2","row2","swapTiles","console","log","className","styled","rows","tiles","style","onClick","Records","container","display","Functions","isSolving","restart","btnVisibility","setBtnVisibility","menuWidth","setMenuWidth","toggleVisibility","toggleMenuWidth","width","btn","visibility","App","state","isInitial","bodyColor","new_pz","setState","bool","togglePanel","toggleBodyColor","document","body","background","handleSwapTiles","tempBoard","handleSolve","handleFinishedSolving","start","id","name","type","onChange","htmlFor","React","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,oBAAoB,MAAQ,uB,uBCAlFD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,IAAM,yB,gBCAjED,EAAOC,QAAU,CAAC,UAAY,2BAA2B,QAAU,2B,oBCAnED,EAAOC,QAAU,CAAC,MAAQ,qB,uLC2EXC,EAvEb,WAAYC,EAAcC,GAAqB,IAAD,gCAJ9CD,UAI8C,OAH9CC,YAG8C,OAF9CC,cAE8C,OAkB9CC,SAAW,SAACC,EAAcC,GACxB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAKN,KAAMM,IAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAKP,KAAMO,IAC7B,GAAIF,EAAGC,GAAGC,KAAOH,EAAM,MAAO,CAACE,EAAGC,GAGtC,MAAO,EAAE,GAAI,IAxB+B,KA2B9CC,mBAAqB,SAACP,EAAoBQ,GACxC,IAAIC,EAAK,CACPC,EAAG,EACHC,GAAI,GAEFC,EAAa,GAL6C,EAMjD,EAAKV,SAAS,EAAGF,GANgC,mBAMzDK,EANyD,KAMtDC,EANsD,KAO9D,GAAIA,EAAI,EAAG,CAET,IAAIO,EAAUC,KAAKC,MAAMD,KAAKE,UAAUhB,IAF/B,EAG4B,CAACa,EAAQR,GAAGC,GAAIO,EAAQR,GAAGC,EAAI,IAAnEO,EAAQR,GAAGC,EAAI,GAHP,KAGWO,EAAQR,GAAGC,GAHtB,KAITM,EAAWK,KAAK,CAACJ,EAASL,EAAY,MAExC,GAAIF,EAAIG,EAAG,EAAKV,MAAO,CACrB,IAAIc,EAAUC,KAAKC,MAAMD,KAAKE,UAAUhB,IADnB,EAEgB,CAACa,EAAQR,GAAGC,GAAIO,EAAQR,GAAGC,EAAI,IAAnEO,EAAQR,GAAGC,EAAI,GAFK,KAEDO,EAAQR,GAAGC,GAFV,KAGrBM,EAAWK,KAAK,CAACJ,EAASL,EAAY,MAExC,GAAIH,EAAI,EAAG,CACT,IAAIQ,EAAUC,KAAKC,MAAMD,KAAKE,UAAUhB,IAD/B,EAE4B,CAACa,EAAQR,GAAGC,GAAIO,EAAQR,EAAI,GAAGC,IAAnEO,EAAQR,EAAI,GAAGC,GAFP,KAEWO,EAAQR,GAAGC,GAFtB,KAGTM,EAAWK,KAAK,CAACJ,EAASL,EAAY,MAExC,GAAIH,EAAII,EAAG,EAAKV,MAAO,CACrB,IAAIc,EAAUC,KAAKC,MAAMD,KAAKE,UAAUhB,IADnB,EAEgB,CAACa,EAAQR,GAAGC,GAAIO,EAAQR,EAAI,GAAGC,IAAnEO,EAAQR,EAAI,GAAGC,GAFK,KAEDO,EAAQR,GAAGC,GAFV,KAGrBM,EAAWK,KAAK,CAACJ,EAASL,EAAY,MAExC,OAAOI,GAvDqC,KA0D9CM,UAAY,SAAClB,GAEX,IADA,IAAImB,EAAQ,EACHC,EAAM,EAAGA,GAAO,EAAKrB,KAAMqB,IAAO,CACzC,IAAIC,EAAQ,EAAKnB,SAASkB,EAAKpB,GAC3BsB,EAAQ,EAAKpB,SAASkB,EAAK,EAAKnB,UAChCsB,EAAMC,KAAKC,IAAIJ,EAAM,GAAKC,EAAM,IAEpCH,GADUK,KAAKC,IAAIJ,EAAM,GAAKC,EAAM,IACrBC,EAEjB,OAAOJ,GAlEPO,KAAK3B,KAAOA,EACZ2B,KAAK1B,OAASA,EAEZ0B,KAAKzB,SADM,IAATF,EACc,CACd,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGO,CACd,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,KC+BN4B,E,kDA9Cb,WAAY5B,GAAe,IAAD,8BACxB,cAAMA,EAAM,CAAC,MAGf6B,QAAU,SAACC,GACT,IAAIC,EAAGxB,EAAGyB,EACV,IAAKA,EAAIF,EAAIG,OAAS,EAAGD,EAAI,EAAGA,IAC9BD,EAAIN,KAAKS,MAAMT,KAAKU,UAAYH,EAAI,IACpCzB,EAAIuB,EAAIE,GACRF,EAAIE,GAAKF,EAAIC,GACbD,EAAIC,GAAKxB,EAEb,OAAOuB,GAZmB,EAe1BM,KAAO,WACL,OAAa,CAKX,IAJA,IAAIC,EAAc,EAAKR,QAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAGpDS,EAAM,EACDN,EAAI,EAAGA,EAAI,EAAGA,IACrB,GAAuB,IAAnBK,EAAYL,GAChB,IAAK,IAAID,EAAIC,EAAE,EAAGD,EAAI,EAAGA,IACA,IAAnBM,EAAYN,IACZM,EAAYL,GAAKK,EAAYN,IAC/BO,IAIN,GAAIA,EAAM,IAAM,EAAG,CAEjB,IADA,IAAIjC,EAAiB,GACZ2B,EAAI,EAAGA,EAAI,EAAGA,GAAG,EAAG,CAE3B,IADA,IAAIO,EAAO,GACFR,EAAIC,EAAGD,EAAIC,EAAI,EAAGD,IACzBQ,EAAKrB,KAAKmB,EAAYN,IAExB1B,EAAGa,KAAKqB,GAEV,OAAOlC,KAvCa,E,UAFJN,G,+BCgCTyC,E,4MA/BbC,MAAQ,WAON,IANA,IACIC,EAAa,CAAC,CAAC,EAAKzC,OADH,EACmB,EAAKkB,UAAU,EAAKlB,QAAS,KAIjE0C,EAAiB,GACG,IAAjBD,EAAMT,QAAc,OAEeS,EAAME,QAFrB,mBAEpBC,EAFoB,KAETC,EAFS,KAEOC,GAFP,WAGzBJ,EAAS5B,KAAKE,UAAU4B,KAAc,EAEtC,IADA,IAAIG,EAAa,EAAKxC,mBAAmBqC,EAAWE,GAC3Cf,EAAI,EAAGA,EAAIgB,EAAWf,OAAQD,IAAK,CAC1C,GACEjB,KAAKE,UAAU+B,EAAWhB,GAAG,MAAQjB,KAAKE,UAAU,EAAKf,UAEzD,OAAO8C,EAAWhB,GAAG,IACmC,IAA/CW,EAAS5B,KAAKE,UAAU+B,EAAWhB,GAAG,MAC/CU,EAAMxB,KAAK,CACT8B,EAAWhB,GAAG,GACdc,EAAS,EACT,EAAK3B,UAAU6B,EAAWhB,GAAG,IAC7BgB,EAAWhB,GAAG,KAIpBU,EAAMO,MAAK,SAACC,EAAaC,GAAd,OAA8BD,EAAE,GAAKC,EAAE,Q,YA3BnCpD,G,gBCgBfqD,EAAU,SAACC,GACf,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,OA4JvCI,EAzJqB,SAAC,GAAgF,IAA9EC,EAA6E,EAA7EA,MAAOC,EAAsE,EAAtEA,KAAMC,EAAgE,EAAhEA,UAAWC,EAAqD,EAArDA,UAAWC,EAA0C,EAA1CA,gBAAiBC,EAAyB,EAAzBA,mBAAyB,EAC5EC,oBAAS,GADmE,mBAC3GC,EAD2G,KAC9FC,EAD8F,OAElEF,oBAAS,GAFyD,mBAE3GG,EAF2G,KAEzFC,EAFyF,OAIhFJ,mBAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAJ8C,mBAI3GK,EAJ2G,KAIhGC,EAJgG,KAM5GC,EAAiBC,sBAAW,uCAChC,WAAOC,GAAP,uBAAAvB,EAAA,sDACWlB,EAAI,EADf,YACkBA,EAAIyC,EAASxC,QAD/B,0BAEiB9B,EAAS,GAF1B,mBAESG,EAFT,KAEYC,EAFZ,KAGwB,MAAhBkE,EAASzC,IAAY1B,IACL,MAAhBmE,EAASzC,IAAY1B,IACL,MAAhBmE,EAASzC,IAAYzB,IACL,MAAhBkE,EAASzC,IAAYzB,IACzBmE,EAAgBpE,EAAGC,GAPvB,UAQU6C,EAAQ,KARlB,QACuCpB,IADvC,uBAUE8B,IACAM,GAAoB,GAXtB,4CADgC,sDAchC,CAACV,IAGHiB,qBAAU,WACR,GAAIf,IAAcO,EAAkB,CAClC,IAAI9D,EAAK,IAAImC,EAAO,EAAGkB,GACvBa,EAAelE,EAAGoC,SAClB2B,GAAoB,GACpBP,GAAU,MAEX,CAACD,EAAWO,EAAkBN,EAAWU,EAAgBb,IAE5D,IAIMvD,EAAW,SAACC,GAEhB,OADgB,IAAIL,EAAO,EAAG2D,GACbvD,SAASC,EAAMsD,IAU5BkB,EAAW,SAACC,GAIhB,IAAIC,EAAe,GAmBnB,OAlBqB,IAAjBT,EAAUQ,KACZC,EAAS,CAAEC,KAAM,MAAOC,MAAO,MAAOC,IAAK,MAAOC,OAAQ,QAEvC,IAAjBb,EAAUQ,KACZC,EAAS,CAAEI,OAAQ,QAASC,WAAY,gBAErB,IAAjBd,EAAUQ,KACZC,EAAS,CAAEG,IAAK,QAASE,WAAY,aAElB,IAAjBd,EAAUQ,KACZC,EAAS,CAAEE,MAAO,QAASG,WAAY,eAEpB,IAAjBd,EAAUQ,KACZC,EAAS,CAAEC,KAAM,QAASI,WAAY,cAE9B,IAANN,IACFC,EAAM,WAAiB,eAElBA,GAGHJ,EAAkB,SAACU,EAAaC,GACpC,GAAKpB,GAlCa,SAACmB,EAAaC,GAAiB,IAAD,EACnClF,EAAS,GAD0B,mBAC3CG,EAD2C,KACxCC,EADwC,KAEhD,OAAID,IAAM8E,GAA6B,IAAtB3D,KAAKC,IAAInB,EAAI8E,IAC1B9E,IAAM8E,GAA6B,IAAtB5D,KAAKC,IAAIpB,EAAI8E,GAgC1BE,CAAYF,EAAKC,GAAM,CAAC,IAAD,EACZlF,EAAS,GADG,mBACpBG,EADoB,KACjBC,EADiB,KAErBgF,EAAa,YAAOlB,GAEpB/D,IAAM8E,GAAO7E,EAAI8E,IACnBE,EAAc,GAAK,EACnBA,EAAc7B,EAAM0B,GAAKC,IAAQ,GAE/B/E,IAAM8E,GAAO7E,EAAI8E,IACnBE,EAAc,GAAK,EACnBA,EAAc7B,EAAM0B,GAAKC,IAAQ,GAE/B9E,IAAM8E,GAAO/E,EAAI8E,IACnBG,EAAc,GAAK,EACnBA,EAAc7B,EAAM0B,GAAKC,IAAQ,GAE/B9E,IAAM8E,GAAO/E,EAAI8E,IACnBG,EAAc,GAAK,EACnBA,EAAc7B,EAAM0B,GAAKC,IAAQ,GAGnCf,EAAa,YAAIiB,IACjBrB,GAAe,GACfV,YAAW,WACTc,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IApE1B,SAACc,EAAaC,EAAaG,EAAcC,GACzD9B,EAAKyB,EAAKC,EAAKG,EAAMC,GAoEjBC,CAAUN,EAAKC,EAAK/E,EAAGC,GACvBoF,QAAQC,IAAIlC,GAEV3C,KAAKE,UAAUyC,KACf3C,KAAKE,UAAU,CACb,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,MAGT8C,GAAmB,GAErBG,GAAe,KACd,OAIP,OACE,yBAAK2B,UAAWC,IAAOpC,OACrB,wBAAImC,UAAWC,IAAOC,MACpB,wBAAIF,UAAWC,IAAOE,MAAOC,MAAOrB,EAASlB,EAAM,GAAG,IAAKwC,QAAS,kBAAMxB,EAAgB,EAAG,KAC1E,IAAhBhB,EAAM,GAAG,GAAW,GAAKA,EAAM,GAAG,IAErC,wBAAImC,UAAWC,IAAOE,MAAOC,MAAOrB,EAASlB,EAAM,GAAG,IAAKwC,QAAS,kBAAMxB,EAAgB,EAAG,KAC1E,IAAhBhB,EAAM,GAAG,GAAW,GAAKA,EAAM,GAAG,IAErC,wBAAImC,UAAWC,IAAOE,MAAOC,MAAOrB,EAASlB,EAAM,GAAG,IAAKwC,QAAS,kBAAMxB,EAAgB,EAAG,KAC1E,IAAhBhB,EAAM,GAAG,GAAW,GAAKA,EAAM,GAAG,IAErC,wBAAImC,UAAWC,IAAOE,MAAOC,MAAOrB,EAASlB,EAAM,GAAG,IAAKwC,QAAS,kBAAMxB,EAAgB,EAAG,KAC1E,IAAhBhB,EAAM,GAAG,GAAW,GAAKA,EAAM,GAAG,IAErC,wBAAImC,UAAWC,IAAOE,MAAOC,MAAOrB,EAASlB,EAAM,GAAG,IAAKwC,QAAS,kBAAMxB,EAAgB,EAAG,KAC1E,IAAhBhB,EAAM,GAAG,GAAW,GAAKA,EAAM,GAAG,IAErC,wBAAImC,UAAWC,IAAOE,MAAOC,MAAOrB,EAASlB,EAAM,GAAG,IAAKwC,QAAS,kBAAMxB,EAAgB,EAAG,KAC1E,IAAhBhB,EAAM,GAAG,GAAW,GAAKA,EAAM,GAAG,IAErC,wBAAImC,UAAWC,IAAOE,MAAOC,MAAOrB,EAASlB,EAAM,GAAG,IAAKwC,QAAS,kBAAMxB,EAAgB,EAAG,KAC1E,IAAhBhB,EAAM,GAAG,GAAW,GAAKA,EAAM,GAAG,IAErC,wBAAImC,UAAWC,IAAOE,MAAOC,MAAOrB,EAASlB,EAAM,GAAG,IAAKwC,QAAS,kBAAMxB,EAAgB,EAAG,KAC1E,IAAhBhB,EAAM,GAAG,GAAW,GAAKA,EAAM,GAAG,IAErC,wBAAImC,UAAWC,IAAOE,MAAOC,MAAOrB,EAASlB,EAAM,GAAG,IAAKwC,QAAS,kBAAMxB,EAAgB,EAAG,KAC1E,IAAhBhB,EAAM,GAAG,GAAW,GAAKA,EAAM,GAAG,O,iBC5J9ByC,EARW,WACxB,OACE,yBAAKN,UAAWC,IAAOM,WACrB,yBAAKP,UAAWC,IAAOO,Y,iBCGvBjD,EAAU,SAACC,GACf,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,OA+CvCiD,EA5C6B,SAAC,GAAuC,IAArCzC,EAAoC,EAApCA,UAAW0C,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAAc,EACvCxC,oBAAS,GAD8B,mBAC1EyC,EAD0E,KAC3DC,EAD2D,OAE/C1C,oBAAS,GAFsC,mBAE1E2C,EAF0E,KAE/DC,EAF+D,KAIjFjC,qBAAU,WACR,IAAMkC,EAAgB,uCAAG,sBAAA3D,EAAA,0DACL,IAAdW,EADmB,gCAEfT,EAAQ,KAFO,OAIvBsD,IAAiB7C,GAJM,2CAAH,qDAMhBiD,EAAe,uCAAG,sBAAA5D,EAAA,0DACJ,IAAdW,EADkB,gCAEdT,EAAQ,KAFM,OAItBwD,IAAa/C,GAJS,2CAAH,qDAMrBgD,IACAC,OAWF,OACE,yBAAKjB,UAAWC,IAAOM,UAAWH,MAAO,CAAEc,MAAOJ,EAAY,OAAS,MACrE,4BAAQd,UAAWC,IAAOkB,IAAKd,QAVf,WAClBK,KASuDN,MAAO,CAAEgB,WAAYR,EAAgB,UAAY,WAAtG,SAGA,4BACEZ,UAAWC,IAAOkB,IAClBd,QAXgB,WACpBM,KAWIP,MAAO,CAAEgB,WAAYR,EAAgB,UAAY,WAHnD,a,+BC+DSS,E,4MAzFbC,MAAQ,CACNzD,MAAO,CACL,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAETE,WAAW,EACXwD,WAAW,EACXvD,WAAW,EACXwD,WAAW,G,EAQbb,QAAU,WACR,IAAIc,EAAS,IAAI1F,EAAU,GAAGQ,OAC9B,EAAKmF,SAAS,CAAE7D,MAAO4D,IACvB,EAAKvD,oBAAmB,I,EAG1BA,mBAAqB,SAACyD,GACpB,EAAKD,SAAS,CAAEH,WAAY,EAAKD,MAAMC,YACvC,EAAKK,YAAYD,I,EAGnBC,YAAc,SAACD,GACb,EAAKD,SAAS,CAAE1D,UAAW2D,K,EAG7BE,gBAAkB,WAChB,EAAKH,SAAS,CAAEF,WAAY,EAAKF,MAAME,YACvCM,SAASC,KAAK3B,MAAM4B,WAAa,EAAKV,MAAME,UAAY,UAAY,W,EAGtES,gBAAkB,SAAC1C,EAAaC,EAAaG,EAAcC,GACzD,IAAIsC,EAAY,EAAKZ,MAAMzD,MAD+C,EAE3B,CAACqE,EAAUvC,GAAMC,GAAOsC,EAAU3C,GAAKC,IAArF0C,EAAU3C,GAAKC,GAF0D,KAEpD0C,EAAUvC,GAAMC,GAFoC,KAG1E,EAAK8B,SAAS,CAAE7D,MAAOqE,K,EAGzBC,YAAc,WACZ,EAAKT,SAAS,CAAE3D,WAAW,K,EAG7BqE,sBAAwB,WACtB,EAAKV,SAAS,CAAE3D,WAAW,K,kEAnC3B,IAAI0D,EAAS,IAAI1F,EAAU,GAAGQ,OAC9BT,KAAK4F,SAAS,CAAE7D,MAAO4D,M,+BAqCf,IAAD,OACP,OACE,6BACE,6BACG3F,KAAKwF,MAAMC,UACV,4BAAQvB,UAAWC,IAAOoC,MAAOhC,QAAS,kBAAM,EAAKnC,oBAAmB,KAAxE,SAIA,GAEF,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWF,UAAWlC,KAAKwF,MAAMtD,UAAW0C,UAAW5E,KAAKqG,YAAaxB,QAAS7E,KAAK6E,UACvF,kBAAC,EAAD,CACE9C,MAAO/B,KAAKwF,MAAMzD,MAClBC,KAAM,SAACyB,EAAKC,EAAKG,EAAMC,GAAjB,OAA0B,EAAKqC,gBAAgB1C,EAAKC,EAAKG,EAAMC,IACrE7B,UAAWjC,KAAKwF,MAAMvD,UACtBC,UAAW,SAAC2D,GAAD,OAAU,EAAKC,YAAYD,IACtCzD,mBAAoB,SAACyD,GAAD,OAAU,EAAKzD,mBAAmByD,IACtD1D,gBAAiBnC,KAAKsG,yBAG1B,yBAAKpC,UAAU,kBACb,2BACEsC,GAAG,iBACHC,KAAK,iBACLvC,UAAU,SACVwC,KAAK,WACLC,SAAU3G,KAAK+F,kBAEjB,2BAAOa,QAAQ,iBAAiB1C,UAAU,kBAC1C,yBAAKA,UAAU,sB,GAnFP2C,IAAMC,WCjBxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFjB,SAASkB,eAAe,W","file":"static/js/main.20383f6e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__pDV63\",\"rows\":\"Board_rows__1Unu7\",\"tiles\":\"Board_tiles__2sfzy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Functions_container__2wiXz\",\"btn\":\"Functions_btn__2NQsq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Records_container__1tP6Y\",\"display\":\"Records_display__3DrEl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"start\":\"App_start__1IK9d\"};","class Puzzle {\r\n  size: 8 | 15;\r\n  puzzle: number[][];\r\n  pzSolved: number[][];\r\n\r\n  constructor(size: 8 | 15, puzzle: number[][]) {\r\n    this.size = size;\r\n    this.puzzle = puzzle;\r\n    if (size === 8)\r\n      this.pzSolved = [\r\n        [1, 2, 3],\r\n        [4, 5, 6],\r\n        [7, 8, 0],\r\n      ];\r\n    else\r\n      this.pzSolved = [\r\n        [1, 2, 3, 4],\r\n        [5, 6, 7, 8],\r\n        [9, 10, 11, 12],\r\n        [13, 14, 15, 0],\r\n      ];\r\n  }\r\n\r\n  findTile = (tile: number, pz: number[][]) => {\r\n    for (let y = 0; y < this.size; y++) {\r\n      for (let x = 0; x < this.size; x++) {\r\n        if (pz[y][x] === tile) return [y, x];\r\n      }\r\n    }\r\n    return [-1, -1];\r\n  };\r\n\r\n  generateChildNodes = (puzzle: number[][], prevMoves: string) => {\r\n    let tb = {\r\n      8: 2,\r\n      15: 3,\r\n    };\r\n    let childNodes = [];\r\n    let [y, x] = this.findTile(0, puzzle);\r\n    if (x > 0) {\r\n      // left\r\n      let newNode = JSON.parse(JSON.stringify(puzzle));\r\n      [newNode[y][x - 1], newNode[y][x]] = [newNode[y][x], newNode[y][x - 1]];\r\n      childNodes.push([newNode, prevMoves + \"l\"]);\r\n    }\r\n    if (x < tb[this.size]) {\r\n      let newNode = JSON.parse(JSON.stringify(puzzle));\r\n      [newNode[y][x + 1], newNode[y][x]] = [newNode[y][x], newNode[y][x + 1]];\r\n      childNodes.push([newNode, prevMoves + \"r\"]);\r\n    }\r\n    if (y > 0) {\r\n      let newNode = JSON.parse(JSON.stringify(puzzle));\r\n      [newNode[y - 1][x], newNode[y][x]] = [newNode[y][x], newNode[y - 1][x]];\r\n      childNodes.push([newNode, prevMoves + \"u\"]);\r\n    }\r\n    if (y < tb[this.size]) {\r\n      let newNode = JSON.parse(JSON.stringify(puzzle));\r\n      [newNode[y + 1][x], newNode[y][x]] = [newNode[y][x], newNode[y + 1][x]];\r\n      childNodes.push([newNode, prevMoves + \"d\"]);\r\n    }\r\n    return childNodes;\r\n  };\r\n\r\n  manhattan = (puzzle: number[][]) => {\r\n    let score = 0;\r\n    for (let val = 0; val <= this.size; val++) {\r\n      let c_pos = this.findTile(val, puzzle);\r\n      let f_pos = this.findTile(val, this.pzSolved);\r\n      let y_d = Math.abs(c_pos[0] - f_pos[0]);\r\n      let x_d = Math.abs(c_pos[1] - f_pos[1]);\r\n      score += x_d + y_d;\r\n    }\r\n    return score;\r\n  };\r\n}\r\n\r\nexport default Puzzle;\r\n","import Puzzle from \"./Puzzle\";\r\n\r\nclass Generator extends Puzzle {\r\n\r\n  constructor(size: 8 | 15) {\r\n    super(size, [[]]);\r\n  }\r\n\r\n  shuffle = (arr: number[]) => {\r\n    var j, x, i;\r\n    for (i = arr.length - 1; i > 0; i--) {\r\n      j = Math.floor(Math.random() * (i + 1));\r\n      x = arr[i];\r\n      arr[i] = arr[j];\r\n      arr[j] = x;\r\n  }\r\n  return arr;\r\n  }\r\n\r\n  make = () => {\r\n    while (true) {\r\n      let potentialPz = this.shuffle([1, 2, 3, 4, 5, 6, 7, 8, 0]);\r\n\r\n      // checks solvability\r\n      let sum = 0;\r\n      for (let i = 0; i < 8; i++) {\r\n        if (potentialPz[i] === 0) continue;\r\n        for (let j = i+1; j < 9; j++) {\r\n          if (potentialPz[j] === 0) continue;\r\n          if (potentialPz[i] > potentialPz[j]) {\r\n            sum++;\r\n          }\r\n        }\r\n      }\r\n      if (sum % 2 === 0) {\r\n        let pz: number[][] = [];\r\n        for (let i = 0; i < 9; i+=3) {\r\n          let temp = []\r\n          for (let j = i; j < i + 3; j++) {\r\n            temp.push(potentialPz[j]);\r\n          }\r\n          pz.push(temp);\r\n        }\r\n        return pz;\r\n      }\r\n      continue;\r\n    }\r\n  };\r\n}\r\n\r\nexport default Generator;\r\n","import Puzzle from \"./Puzzle\";\r\n\r\nclass Solver extends Puzzle {\r\n  AStar = () => {\r\n    let gScore: number = 0;\r\n    let queue: any = [[this.puzzle, gScore, this.manhattan(this.puzzle), \"\"]];\r\n    interface Dict {\r\n      [key: string]: boolean;\r\n    }\r\n    let closeSet: Dict = {};\r\n    while (queue.length !== 0) {\r\n      // eslint-disable-next-line\r\n      let [currentPz, gScore, hScore, step] = queue.shift();\r\n      closeSet[JSON.stringify(currentPz)] = true;\r\n      let nextChilds = this.generateChildNodes(currentPz, step);\r\n      for (let i = 0; i < nextChilds.length; i++) {\r\n        if (\r\n          JSON.stringify(nextChilds[i][0]) === JSON.stringify(this.pzSolved)\r\n        ) {\r\n          return nextChilds[i][1];\r\n        } else if (closeSet[JSON.stringify(nextChilds[i][0])] !== true) {\r\n          queue.push([\r\n            nextChilds[i][0],\r\n            gScore + 1,\r\n            this.manhattan(nextChilds[i][0]),\r\n            nextChilds[i][1],\r\n          ]);\r\n        }\r\n      }\r\n      queue.sort((a: number[], b: number[]) => a[2] - b[2]);\r\n    }\r\n  };\r\n}\r\n\r\nexport default Solver;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport CSS from \"csstype\";\r\n\r\nimport Solver from \"../../utils/Solver\";\r\nimport Generator from \"../../utils/Generator\";\r\nimport Puzzle from \"../../utils/Puzzle\";\r\n\r\nimport styled from \"./Board.module.css\";\r\n\r\ntype BoardProps = {\r\n  board: number[][];\r\n  swap: (col: number, row: number, col2: number, row2: number) => void;\r\n  isPlaying: boolean;\r\n  showPanel: (bool: boolean) => void;\r\n  finishedSolving: () => void;\r\n  toggleInitialState: (bool: boolean) => void;\r\n};\r\n\r\nconst timeOut = (ms: number) => {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n};\r\n\r\nconst Board: React.FC<BoardProps> = ({ board, swap, isPlaying, showPanel, finishedSolving, toggleInitialState }) => {\r\n  const [isClickable, setIsClickable] = useState(true);\r\n  const [inSolvingProcess, setInSolvingProcess] = useState(false);\r\n\r\n  const [tileStyle, setTileStyle] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0]);\r\n\r\n  const commandsLoader = useCallback(\r\n    async (sequence: string) => {\r\n      for (let i = 0; i < sequence.length; i++) {\r\n        let [y, x] = findTile(0);\r\n        if (sequence[i] === \"u\") y--;\r\n        if (sequence[i] === \"d\") y++;\r\n        if (sequence[i] === \"r\") x++;\r\n        if (sequence[i] === \"l\") x--;\r\n        handleTileClick(y, x);\r\n        await timeOut(500);\r\n      }\r\n      finishedSolving();\r\n      setInSolvingProcess(false);\r\n    },\r\n    [board]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isPlaying && !inSolvingProcess) {\r\n      let pz = new Solver(8, board);\r\n      commandsLoader(pz.AStar());\r\n      setInSolvingProcess(true);\r\n      showPanel(false);\r\n    }\r\n  }, [isPlaying, inSolvingProcess, showPanel, commandsLoader, board]);\r\n\r\n  const swapTiles = (col: number, row: number, col2: number, row2: number) => {\r\n    swap(col, row, col2, row2);\r\n  };\r\n\r\n  const findTile = (tile: number) => {\r\n    let tempBoard = new Puzzle(8, board);\r\n    return tempBoard.findTile(tile, board);\r\n  };\r\n\r\n  const isSwappable = (col: number, row: number) => {\r\n    let [y, x] = findTile(0);\r\n    if (y === col && Math.abs(x - row) === 1) return true;\r\n    if (x === row && Math.abs(y - col) === 1) return true;\r\n    return false;\r\n  };\r\n\r\n  const getStyle = (n: number) => {\r\n    interface Dict {\r\n      [key: string]: string;\r\n    }\r\n    let styles: Dict = {};\r\n    if (tileStyle[n] === 0) {\r\n      styles = { left: \"0vw\", right: \"0vw\", top: \"0vw\", bottom: \"0vw\" };\r\n    }\r\n    if (tileStyle[n] === 3) {\r\n      styles = { bottom: \"9.3vw\", transition: \"bottom 0.5s\" };\r\n    }\r\n    if (tileStyle[n] === 4) {\r\n      styles = { top: \"9.3vw\", transition: \"top 0.5s\" };\r\n    }\r\n    if (tileStyle[n] === 2) {\r\n      styles = { right: \"9.3vw\", transition: \"right 0.5s\" };\r\n    }\r\n    if (tileStyle[n] === 1) {\r\n      styles = { left: \"9.3vw\", transition: \"left 0.5s\" };\r\n    }\r\n    if (n === 0) {\r\n      styles[\"background\"] = \"transparent\";\r\n    }\r\n    return styles;\r\n  };\r\n\r\n  const handleTileClick = (col: number, row: number) => {\r\n    if (!isClickable) return;\r\n    if (isSwappable(col, row)) {\r\n      let [y, x] = findTile(0);\r\n      let tempTileStyle = [...tileStyle];\r\n\r\n      if (y === col && x > row) {\r\n        tempTileStyle[0] = 2;\r\n        tempTileStyle[board[col][row]] = 1;\r\n      }\r\n      if (y === col && x < row) {\r\n        tempTileStyle[0] = 1;\r\n        tempTileStyle[board[col][row]] = 2;\r\n      }\r\n      if (x === row && y > col) {\r\n        tempTileStyle[0] = 3;\r\n        tempTileStyle[board[col][row]] = 4;\r\n      }\r\n      if (x === row && y < col) {\r\n        tempTileStyle[0] = 4;\r\n        tempTileStyle[board[col][row]] = 3;\r\n      }\r\n\r\n      setTileStyle([...tempTileStyle]);\r\n      setIsClickable(false);\r\n      setTimeout(() => {\r\n        setTileStyle([0, 0, 0, 0, 0, 0, 0, 0, 0]);\r\n        swapTiles(col, row, y, x);\r\n        console.log(board);\r\n        if (\r\n          JSON.stringify(board) ===\r\n          JSON.stringify([\r\n            [1, 2, 3],\r\n            [4, 5, 6],\r\n            [7, 8, 0],\r\n          ])\r\n        ) {\r\n          toggleInitialState(false);\r\n        }\r\n        setIsClickable(true);\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styled.board}>\r\n      <ul className={styled.rows}>\r\n        <li className={styled.tiles} style={getStyle(board[0][0])} onClick={() => handleTileClick(0, 0)}>\r\n          {board[0][0] === 0 ? \"\" : board[0][0]}\r\n        </li>\r\n        <li className={styled.tiles} style={getStyle(board[0][1])} onClick={() => handleTileClick(0, 1)}>\r\n          {board[0][1] === 0 ? \"\" : board[0][1]}\r\n        </li>\r\n        <li className={styled.tiles} style={getStyle(board[0][2])} onClick={() => handleTileClick(0, 2)}>\r\n          {board[0][2] === 0 ? \"\" : board[0][2]}\r\n        </li>\r\n        <li className={styled.tiles} style={getStyle(board[1][0])} onClick={() => handleTileClick(1, 0)}>\r\n          {board[1][0] === 0 ? \"\" : board[1][0]}\r\n        </li>\r\n        <li className={styled.tiles} style={getStyle(board[1][1])} onClick={() => handleTileClick(1, 1)}>\r\n          {board[1][1] === 0 ? \"\" : board[1][1]}\r\n        </li>\r\n        <li className={styled.tiles} style={getStyle(board[1][2])} onClick={() => handleTileClick(1, 2)}>\r\n          {board[1][2] === 0 ? \"\" : board[1][2]}\r\n        </li>\r\n        <li className={styled.tiles} style={getStyle(board[2][0])} onClick={() => handleTileClick(2, 0)}>\r\n          {board[2][0] === 0 ? \"\" : board[2][0]}\r\n        </li>\r\n        <li className={styled.tiles} style={getStyle(board[2][1])} onClick={() => handleTileClick(2, 1)}>\r\n          {board[2][1] === 0 ? \"\" : board[2][1]}\r\n        </li>\r\n        <li className={styled.tiles} style={getStyle(board[2][2])} onClick={() => handleTileClick(2, 2)}>\r\n          {board[2][2] === 0 ? \"\" : board[2][2]}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React, {useState} from 'react';\r\n\r\nimport styled from './Records.module.css';\r\n\r\nconst Records: React.FC = () => {\r\n  return (\r\n    <div className={styled.container}>\r\n      <div className={styled.display}></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Records;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport styled from \"./Functions.module.css\";\r\n\r\ninterface FunctionsProps {\r\n  showPanel: boolean;\r\n  isSolving: () => void;\r\n  restart: () => void;\r\n}\r\n\r\nconst timeOut = (ms: number) => {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n};\r\n\r\nconst Functions: React.FC<FunctionsProps> = ({ showPanel, isSolving, restart }) => {\r\n  const [btnVisibility, setBtnVisibility] = useState(false);\r\n  const [menuWidth, setMenuWidth] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const toggleVisibility = async () => {\r\n      if (showPanel === true) {\r\n        await timeOut(300);\r\n      }\r\n      setBtnVisibility(showPanel ? true : false);\r\n    };\r\n    const toggleMenuWidth = async () => {\r\n      if (showPanel !== true) {\r\n        await timeOut(500);\r\n      }\r\n      setMenuWidth(showPanel ? true : false);\r\n    };\r\n    toggleVisibility();\r\n    toggleMenuWidth();\r\n  });\r\n\r\n  const handleSolve = () => {\r\n    isSolving();\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    restart();\r\n  };\r\n\r\n  return (\r\n    <div className={styled.container} style={{ width: menuWidth ? \"12vw\" : \"0\" }}>\r\n      <button className={styled.btn} onClick={handleSolve} style={{ visibility: btnVisibility ? \"visible\" : \"hidden\" }}>\r\n        Solve\r\n      </button>\r\n      <button\r\n        className={styled.btn}\r\n        onClick={handleRestart}\r\n        style={{ visibility: btnVisibility ? \"visible\" : \"hidden\" }}>\r\n        Restart\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Functions;\r\n","import React from \"react\";\n\nimport Solver from \"./utils/Solver\";\nimport Generator from \"./utils/Generator\";\n\nimport Board from \"./components/Board/Board\";\nimport Records from \"./components/Records/Records\";\nimport Functions from \"./components/Functions/Functions\";\n\nimport \"./body.css\";\nimport \"./toggle.css\";\nimport styled from \"./App.module.css\";\n\ninterface AppState {\n  board: number[][];\n  isPlaying: boolean;\n  isInitial: boolean;\n  showPanel: boolean;\n  bodyColor: boolean;\n}\n\nclass App extends React.Component<{}, AppState> {\n  state = {\n    board: [\n      [1, 2, 3],\n      [4, 5, 6],\n      [7, 8, 9],\n    ],\n    isPlaying: false,\n    isInitial: true,\n    showPanel: false,\n    bodyColor: false,\n  };\n\n  componentDidMount() {\n    let new_pz = new Generator(8).make();\n    this.setState({ board: new_pz });\n  }\n\n  restart = () => {\n    let new_pz = new Generator(8).make();\n    this.setState({ board: new_pz });\n    this.toggleInitialState(false);\n  };\n\n  toggleInitialState = (bool: boolean) => {\n    this.setState({ isInitial: !this.state.isInitial });\n    this.togglePanel(bool);\n  };\n\n  togglePanel = (bool: boolean) => {\n    this.setState({ showPanel: bool });\n  };\n\n  toggleBodyColor = () => {\n    this.setState({ bodyColor: !this.state.bodyColor });\n    document.body.style.background = this.state.bodyColor ? \"#cacdd4\" : \"#27282a\";\n  };\n\n  handleSwapTiles = (col: number, row: number, col2: number, row2: number) => {\n    let tempBoard = this.state.board;\n    [tempBoard[col][row], tempBoard[col2][row2]] = [tempBoard[col2][row2], tempBoard[col][row]];\n    this.setState({ board: tempBoard });\n  };\n\n  handleSolve = () => {\n    this.setState({ isPlaying: true });\n  };\n\n  handleFinishedSolving = () => {\n    this.setState({ isPlaying: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          {this.state.isInitial ? (\n            <button className={styled.start} onClick={() => this.toggleInitialState(true)}>\n              START\n            </button>\n          ) : (\n            \"\"\n          )}\n          <Records />\n          <Functions showPanel={this.state.showPanel} isSolving={this.handleSolve} restart={this.restart} />\n          <Board\n            board={this.state.board}\n            swap={(col, row, col2, row2) => this.handleSwapTiles(col, row, col2, row2)}\n            isPlaying={this.state.isPlaying}\n            showPanel={(bool) => this.togglePanel(bool)}\n            toggleInitialState={(bool) => this.toggleInitialState(bool)}\n            finishedSolving={this.handleFinishedSolving}\n          />\n        </div>\n        <div className=\"toggle-wrapper\">\n          <input\n            id=\"provideMuffins\"\n            name=\"provideMuffins\"\n            className=\"toggle\"\n            type=\"checkbox\"\n            onChange={this.toggleBodyColor}\n          />\n          <label htmlFor=\"provideMuffins\" className=\"toggle--label\"></label>\n          <div className=\"foux-toggle\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}