{"version":3,"sources":["components/Board/Board.module.css","components/Functions/Functions.module.css","components/Records/Records.module.css","App.module.css","utils/Puzzle.ts","utils/Generator.ts","utils/Solver.ts","components/Board/Board.tsx","components/Records/Records.tsx","components/Functions/Functions.tsx","App.tsx","index.tsx"],"names":["module","exports","Puzzle","size","puzzle","pzSolved","findTile","tile","pz","y","x","generateChildNodes","prevMoves","tb","8","15","childNodes","newNode","JSON","parse","stringify","push","manhattan","score","val","c_pos","f_pos","y_d","Math","abs","this","Generator","shuffle","arr","j","i","length","floor","random","make","potentialPz","sum","temp","Solver","AStar","queue","closeSet","shift","currentPz","gScore","step","nextChilds","sort","a","b","timeOut","ms","Promise","resolve","setTimeout","Board","board","swap","isSolving","useState","isClickable","setIsClickable","inSolvingProcess","setInSolvingProcess","tileStyle","setTileStyle","useEffect","console","log","commandsLoader","sequence","handleTileClick","getStyle","n","styles","left","right","top","bottom","transition","col","row","isSwappable","tempTileStyle","col2","row2","swapTiles","className","styled","rows","tiles","style","onClick","Records","container","display","Functions","isPlaying","btnVisibility","setBtnVisibility","menuWidth","setMenuWidth","toggleVisibility","toggleMenuWidth","width","btn","visibility","App","state","togglePlayingState","setState","handleSwapTiles","tempBoard","handleSolve","new_pz","start","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a01c2ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__pDV63\",\"rows\":\"Board_rows__1Unu7\",\"tiles\":\"Board_tiles__2sfzy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Functions_container__2wiXz\",\"btn\":\"Functions_btn__2NQsq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Records_container__1tP6Y\",\"display\":\"Records_display__3DrEl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"start\":\"App_start__1IK9d\"};","class Puzzle {\r\n  size: 8 | 15;\r\n  puzzle: number[][];\r\n  pzSolved: number[][];\r\n\r\n  constructor(size: 8 | 15, puzzle: number[][]) {\r\n    this.size = size;\r\n    this.puzzle = puzzle;\r\n    if (size === 8)\r\n      this.pzSolved = [\r\n        [1, 2, 3],\r\n        [4, 5, 6],\r\n        [7, 8, 0],\r\n      ];\r\n    else\r\n      this.pzSolved = [\r\n        [1, 2, 3, 4],\r\n        [5, 6, 7, 8],\r\n        [9, 10, 11, 12],\r\n        [13, 14, 15, 0],\r\n      ];\r\n  }\r\n\r\n  findTile = (tile: number, pz: number[][]) => {\r\n    for (let y = 0; y < this.size; y++) {\r\n      for (let x = 0; x < this.size; x++) {\r\n        if (pz[y][x] === tile) return [y, x];\r\n      }\r\n    }\r\n    return [-1, -1];\r\n  };\r\n\r\n  generateChildNodes = (puzzle: number[][], prevMoves: string) => {\r\n    let tb = {\r\n      8: 2,\r\n      15: 3,\r\n    };\r\n    let childNodes = [];\r\n    let [y, x] = this.findTile(0, puzzle);\r\n    if (x > 0) {\r\n      // left\r\n      let newNode = JSON.parse(JSON.stringify(puzzle));\r\n      [newNode[y][x - 1], newNode[y][x]] = [newNode[y][x], newNode[y][x - 1]];\r\n      childNodes.push([newNode, prevMoves + \"l\"]);\r\n    }\r\n    if (x < tb[this.size]) {\r\n      let newNode = JSON.parse(JSON.stringify(puzzle));\r\n      [newNode[y][x + 1], newNode[y][x]] = [newNode[y][x], newNode[y][x + 1]];\r\n      childNodes.push([newNode, prevMoves + \"r\"]);\r\n    }\r\n    if (y > 0) {\r\n      let newNode = JSON.parse(JSON.stringify(puzzle));\r\n      [newNode[y - 1][x], newNode[y][x]] = [newNode[y][x], newNode[y - 1][x]];\r\n      childNodes.push([newNode, prevMoves + \"u\"]);\r\n    }\r\n    if (y < tb[this.size]) {\r\n      let newNode = JSON.parse(JSON.stringify(puzzle));\r\n      [newNode[y + 1][x], newNode[y][x]] = [newNode[y][x], newNode[y + 1][x]];\r\n      childNodes.push([newNode, prevMoves + \"d\"]);\r\n    }\r\n    return childNodes;\r\n  };\r\n\r\n  manhattan = (puzzle: number[][]) => {\r\n    let score = 0;\r\n    for (let val = 0; val <= this.size; val++) {\r\n      let c_pos = this.findTile(val, puzzle);\r\n      let f_pos = this.findTile(val, this.pzSolved);\r\n      let y_d = Math.abs(c_pos[0] - f_pos[0]);\r\n      let x_d = Math.abs(c_pos[1] - f_pos[1]);\r\n      score += x_d + y_d;\r\n    }\r\n    return score;\r\n  };\r\n}\r\n\r\nexport default Puzzle;\r\n","import Puzzle from \"./Puzzle\";\r\n\r\nclass Generator extends Puzzle {\r\n\r\n  constructor(size: 8 | 15) {\r\n    super(size, [[]]);\r\n  }\r\n\r\n  shuffle = (arr: number[]) => {\r\n    var j, x, i;\r\n    for (i = arr.length - 1; i > 0; i--) {\r\n      j = Math.floor(Math.random() * (i + 1));\r\n      x = arr[i];\r\n      arr[i] = arr[j];\r\n      arr[j] = x;\r\n  }\r\n  return arr;\r\n  }\r\n\r\n  make = () => {\r\n    while (true) {\r\n      let potentialPz = this.shuffle([1, 2, 3, 4, 5, 6, 7, 8, 0]);\r\n\r\n      // checks solvability\r\n      let sum = 0;\r\n      for (let i = 0; i < 8; i++) {\r\n        if (potentialPz[i] === 0) continue;\r\n        for (let j = i+1; j < 9; j++) {\r\n          if (potentialPz[j] === 0) continue;\r\n          if (potentialPz[i] > potentialPz[j]) {\r\n            sum++;\r\n          }\r\n        }\r\n      }\r\n      if (sum % 2 === 0) {\r\n        let pz: number[][] = [];\r\n        for (let i = 0; i < 9; i+=3) {\r\n          let temp = []\r\n          for (let j = i; j < i + 3; j++) {\r\n            temp.push(potentialPz[j]);\r\n          }\r\n          pz.push(temp);\r\n        }\r\n        return pz;\r\n      }\r\n      continue;\r\n    }\r\n  };\r\n}\r\n\r\nexport default Generator;\r\n","import Puzzle from \"./Puzzle\";\r\n\r\nclass Solver extends Puzzle {\r\n  AStar = () => {\r\n    let gScore: number = 0;\r\n    let queue: any = [[this.puzzle, gScore, this.manhattan(this.puzzle), \"\"]];\r\n    interface Dict {\r\n      [key: string]: boolean;\r\n    }\r\n    let closeSet: Dict = {};\r\n    while (queue.length !== 0) {\r\n      // eslint-disable-next-line\r\n      let [currentPz, gScore, hScore, step] = queue.shift();\r\n      closeSet[JSON.stringify(currentPz)] = true;\r\n      let nextChilds = this.generateChildNodes(currentPz, step);\r\n      for (let i = 0; i < nextChilds.length; i++) {\r\n        if (\r\n          JSON.stringify(nextChilds[i][0]) === JSON.stringify(this.pzSolved)\r\n        ) {\r\n          return nextChilds[i][1];\r\n        } else if (closeSet[JSON.stringify(nextChilds[i][0])] !== true) {\r\n          queue.push([\r\n            nextChilds[i][0],\r\n            gScore + 1,\r\n            this.manhattan(nextChilds[i][0]),\r\n            nextChilds[i][1],\r\n          ]);\r\n        }\r\n      }\r\n      queue.sort((a: number[], b: number[]) => a[2] - b[2]);\r\n    }\r\n  };\r\n}\r\n\r\nexport default Solver;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CSS from 'csstype';\r\n\r\nimport Solver from \"../../utils/Solver\";\r\nimport Generator from \"../../utils/Generator\";\r\nimport Puzzle from \"../../utils/Puzzle\";\r\n\r\nimport styled from \"./Board.module.css\";\r\n\r\n\r\ntype BoardProps = {\r\n  board: number[][];\r\n  swap: (col: number, row: number, col2: number, row2: number) => void;\r\n  isSolving: boolean;\r\n};\r\n\r\nconst timeOut = (ms: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nconst Board: React.FC<BoardProps> = ({board, swap, isSolving}) => {\r\n\r\n  const [isClickable, setIsClickable] = useState(true);\r\n  const [inSolvingProcess, setInSolvingProcess] = useState(false);\r\n\r\n  const [tileStyle, setTileStyle] = useState(\r\n    [\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n    ]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (isSolving && !inSolvingProcess) {\r\n      console.log(isSolving);\r\n      let pz = new Solver(8, board);\r\n      commandsLoader(pz.AStar())\r\n      setInSolvingProcess(true);\r\n    }\r\n  })\r\n\r\n  const commandsLoader = async (sequence : string) => {\r\n    for (let i = 0; i < sequence.length; i++) {\r\n      let [y, x] = findTile(0);\r\n      if (sequence[i] === 'u') y--;\r\n      if (sequence[i] === 'd') y++;\r\n      if (sequence[i] === 'r') x++;\r\n      if (sequence[i] === 'l') x--;\r\n      handleTileClick(y, x);\r\n      await timeOut(500);\r\n    }\r\n  }\r\n\r\n  const swapTiles = (col : number, row : number, col2 : number, row2 : number) => {\r\n    swap(col, row, col2, row2);\r\n  }\r\n\r\n  const findTile = (tile : number) => {\r\n    let tempBoard = new Puzzle(8, board);\r\n    return tempBoard.findTile(tile, board)\r\n  }\r\n\r\n  const isSwappable = (col : number, row : number) => {\r\n    let [y, x] = findTile(0);\r\n    if (y === col && Math.abs(x - row) === 1) return true;\r\n    if (x === row && Math.abs(y - col) === 1) return true;\r\n    return false;\r\n  }\r\n\r\n  const getStyle = (n : number) => {\r\n    interface Dict {\r\n      [key: string]: string;\r\n    }\r\n    let styles: Dict = {};\r\n    if (tileStyle[n] === 0) {\r\n      styles = {left: '0vw', right: '0vw', top: '0vw', bottom: '0vw'};\r\n    }\r\n    if (tileStyle[n] === 3) {\r\n      styles = {bottom: '9.3vw', transition: 'bottom 0.5s'};\r\n    }\r\n    if (tileStyle[n] === 4) {\r\n      styles = {top: '9.3vw', transition: 'top 0.5s'};\r\n    }\r\n    if (tileStyle[n] === 2) {\r\n      styles = {right: '9.3vw', transition: 'right 0.5s'};\r\n    }\r\n    if (tileStyle[n] === 1) {\r\n      styles = {left: '9.3vw',  transition: 'left 0.5s'};\r\n    }\r\n    if (n === 0) {\r\n      styles['background'] = 'transparent';\r\n    }\r\n    return styles;\r\n  }\r\n\r\n  const handleTileClick = (col : number, row : number) => {\r\n    if (!isClickable) return;\r\n    if (isSwappable(col, row)) {\r\n      \r\n      let [y, x] = findTile(0);\r\n      let tempTileStyle = [...tileStyle]\r\n      \r\n      if (y === col && x > row) {\r\n        tempTileStyle[0] = 2;\r\n        tempTileStyle[board[col][row]] = 1;\r\n      }\r\n      if (y === col && x < row) {\r\n        tempTileStyle[0] = 1;\r\n        tempTileStyle[board[col][row]] = 2;\r\n      }\r\n      if (x === row && y > col) {\r\n        tempTileStyle[0] = 3;\r\n        tempTileStyle[board[col][row]] = 4;\r\n      }\r\n      if (x === row && y < col) {\r\n        tempTileStyle[0] = 4;\r\n        tempTileStyle[board[col][row]] = 3;\r\n      }\r\n\r\n      setTileStyle([...tempTileStyle]);\r\n      setIsClickable(false);\r\n      setTimeout(() => {\r\n        setTileStyle([\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n        ])\r\n        swapTiles(col, row, y, x);\r\n        setIsClickable(true);\r\n      }, 500)\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className={styled.board}>\r\n      <ul className={styled.rows}>\r\n        <li className={styled.tiles} style={getStyle(board[0][0])} onClick={() => handleTileClick(0, 0)}>{board[0][0] === 0 ? '' : board[0][0]}</li>\r\n        <li className={styled.tiles} style={getStyle(board[0][1])} onClick={() => handleTileClick(0, 1)}>{board[0][1] === 0 ? '' : board[0][1]}</li>\r\n        <li className={styled.tiles} style={getStyle(board[0][2])} onClick={() => handleTileClick(0, 2)}>{board[0][2] === 0 ? '' : board[0][2]}</li>\r\n        <li className={styled.tiles} style={getStyle(board[1][0])} onClick={() => handleTileClick(1, 0)}>{board[1][0] === 0 ? '' : board[1][0]}</li>\r\n        <li className={styled.tiles} style={getStyle(board[1][1])} onClick={() => handleTileClick(1, 1)}>{board[1][1] === 0 ? '' : board[1][1]}</li>\r\n        <li className={styled.tiles} style={getStyle(board[1][2])} onClick={() => handleTileClick(1, 2)}>{board[1][2] === 0 ? '' : board[1][2]}</li>\r\n        <li className={styled.tiles} style={getStyle(board[2][0])} onClick={() => handleTileClick(2, 0)}>{board[2][0] === 0 ? '' : board[2][0]}</li>\r\n        <li className={styled.tiles} style={getStyle(board[2][1])} onClick={() => handleTileClick(2, 1)}>{board[2][1] === 0 ? '' : board[2][1]}</li>\r\n        <li className={styled.tiles} style={getStyle(board[2][2])} onClick={() => handleTileClick(2, 2)}>{board[2][2] === 0 ? '' : board[2][2]}</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React, {useState} from 'react';\r\n\r\nimport styled from './Records.module.css';\r\n\r\nconst Records: React.FC = () => {\r\n  return (\r\n    <div className={styled.container}>\r\n      <div className={styled.display}></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Records;\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport styled from './Functions.module.css'\r\n\r\ninterface FunctionsProps {\r\n  isPlaying: boolean;\r\n  isSolving: () => void;\r\n}\r\n\r\nconst timeOut = (ms: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nconst Functions: React.FC<FunctionsProps> = ({isPlaying, isSolving}) => {\r\n\r\n  const [btnVisibility, setBtnVisibility] = useState(false);\r\n  const [menuWidth, setMenuWidth] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const toggleVisibility = async () => {\r\n      if (isPlaying === true) {\r\n        await timeOut(300);\r\n      }\r\n      setBtnVisibility(isPlaying ? true : false);\r\n    }\r\n    const toggleMenuWidth = async () => {\r\n      if (isPlaying !== true) {\r\n        await timeOut(500);\r\n      }\r\n      setMenuWidth(isPlaying ? true : false);\r\n    }\r\n    toggleVisibility();\r\n    toggleMenuWidth();\r\n  })\r\n\r\n  const handleSolve = () => {\r\n    isSolving();\r\n  }\r\n\r\n  return (\r\n    <div className={styled.container} style={{width: menuWidth ? '12vw' : '0'}}>\r\n      <button className={styled.btn} onClick={handleSolve} style={{visibility: btnVisibility ? 'visible' : 'hidden'}}>Solve</button>\r\n      <button className={styled.btn} style={{visibility: btnVisibility ? 'visible' : 'hidden'}}>Restart</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Functions;","import React from \"react\";\n\nimport Solver from \"./utils/Solver\";\nimport Generator from \"./utils/Generator\";\n\nimport Board from \"./components/Board/Board\";\nimport Records from \"./components/Records/Records\";\nimport Functions from './components/Functions/Functions';\n\nimport \"./body.css\";\nimport styled from \"./App.module.css\";\n\ninterface AppState {\n  board: number[][];\n  isPlaying: boolean;\n  isSolving: boolean;\n}\n\nclass App extends React.Component<{}, AppState> {\n  state = {\n    board: [\n      [1, 2, 3],\n      [4, 5, 6],\n      [7, 8, 9]\n    ],\n    isPlaying: false,\n    isSolving: false,\n  }\n\n  componentDidMount() {\n    let new_pz = new Generator(8).make()\n    this.setState({board: new_pz})\n  }\n\n  togglePlayingState = () => {\n    this.setState({isPlaying: !this.state.isPlaying})\n  }\n\n  handleSwapTiles = (col : number, row : number, col2 : number, row2 : number) => {\n    let tempBoard = this.state.board;\n    [tempBoard[col][row], tempBoard[col2][row2]] = [tempBoard[col2][row2], tempBoard[col][row]];\n    this.setState({board: tempBoard});\n  }\n\n  handleSolve = () => {\n    this.setState({isSolving: true});\n  }\n  \n  render() {\n    return (\n      <div>\n        {!this.state.isPlaying ? <button className={styled.start} onClick={this.togglePlayingState} >START</button> : ''}\n        <Records />\n        <Functions \n          isPlaying={this.state.isPlaying}\n          isSolving={this.handleSolve}\n        />\n        <Board \n          board={this.state.board} \n          swap={(col, row, col2, row2) => this.handleSwapTiles(col, row, col2, row2)}\n          isSolving={this.state.isSolving}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}